// Generated by @wagmi/cli@1.0.0 on 07/05/2024 at 13:23:12
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AltBase
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export const altBaseABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collectionId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'organisationId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: false
      },
      {
        name: 'restrictedPublishing',
        internalType: 'bool',
        type: 'bool',
        indexed: false
      },
      { name: 'retired', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'update', internalType: 'bool', type: 'bool', indexed: false }
    ],
    name: 'Collection'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collectionId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'collectionName',
        internalType: 'string',
        type: 'string',
        indexed: false
      },
      {
        name: 'collectionInfoFields',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false
      },
      {
        name: 'collectionInfoDataTypes',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false
      },
      {
        name: 'collectionInfoValues',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false
      },
      {
        name: 'uniqueDocumentPerAddress',
        internalType: 'bool',
        type: 'bool',
        indexed: false
      },
      {
        name: 'editableDocuments',
        internalType: 'bool',
        type: 'bool',
        indexed: false
      }
    ],
    name: 'CollectionInfo'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'documentId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'organisationId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'collectionId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'fieldNames',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false
      },
      {
        name: 'fieldDataTypes',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false
      },
      {
        name: 'fieldValues',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false
      },
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: false
      },
      { name: 'retired', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'update', internalType: 'bool', type: 'bool', indexed: false }
    ],
    name: 'Document'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newFeeCollectorAddress',
        internalType: 'address',
        type: 'address',
        indexed: true
      }
    ],
    name: 'FeeCollectorAddressUpdated'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'collectionId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'fieldNames',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false
      },
      {
        name: 'fieldOptions',
        internalType: 'string[][]',
        type: 'string[][]',
        indexed: false
      },
      {
        name: 'fieldDataTypes',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false
      },
      {
        name: 'requiredFields',
        internalType: 'bool[]',
        type: 'bool[]',
        indexed: false
      }
    ],
    name: 'Fields'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'organisationId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'organisationName',
        internalType: 'string',
        type: 'string',
        indexed: false
      },
      {
        name: 'organisationInfoFields',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false
      },
      {
        name: 'organisationInfoDataTypes',
        internalType: 'uint256[]',
        type: 'uint256[]',
        indexed: false
      },
      {
        name: 'organisationInfoValues',
        internalType: 'string[]',
        type: 'string[]',
        indexed: false
      },
      { name: 'retired', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'update', internalType: 'bool', type: 'bool', indexed: false }
    ],
    name: 'Organisation'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true
      }
    ],
    name: 'OwnershipTransferred'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'newFeeAmount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true
      },
      {
        name: 'feeType',
        internalType: 'enum Fees.Fee',
        type: 'uint8',
        indexed: true
      }
    ],
    name: 'feeChanged'
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'level',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false
      }
    ],
    name: 'permissionChanged'
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_feeCollectorAddress',
        internalType: 'address payable',
        type: 'address'
      }
    ],
    name: 'changeFeeCollectorAddress',
    outputs: []
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_organisationId', internalType: 'uint256', type: 'uint256' },
      {
        name: '_params',
        internalType: 'struct AltBase.CollectionParams',
        type: 'tuple',
        components: [
          { name: 'collectionId', internalType: 'uint256', type: 'uint256' },
          {
            name: 'info',
            internalType: 'struct AltBase.Info',
            type: 'tuple',
            components: [
              { name: 'name', internalType: 'string', type: 'string' },
              {
                name: 'fieldNames',
                internalType: 'string[]',
                type: 'string[]'
              },
              {
                name: 'dataTypes',
                internalType: 'uint256[]',
                type: 'uint256[]'
              },
              { name: 'values', internalType: 'string[]', type: 'string[]' }
            ]
          },
          { name: 'fieldNames', internalType: 'string[]', type: 'string[]' },
          {
            name: 'fieldOptions',
            internalType: 'string[][]',
            type: 'string[][]'
          },
          {
            name: 'fieldDataTypes',
            internalType: 'uint256[]',
            type: 'uint256[]'
          },
          { name: 'requiredFields', internalType: 'bool[]', type: 'bool[]' },
          {
            name: 'uniqueDocumentPerAddress',
            internalType: 'bool',
            type: 'bool'
          },
          { name: 'editableDocuments', internalType: 'bool', type: 'bool' },
          { name: 'restrictedPublishing', internalType: 'bool', type: 'bool' },
          {
            name: 'status',
            internalType: 'struct AltBase.Status',
            type: 'tuple',
            components: [
              { name: 'update', internalType: 'bool', type: 'bool' },
              { name: 'retired', internalType: 'bool', type: 'bool' }
            ]
          }
        ]
      }
    ],
    name: 'createOrUpdateCollection',
    outputs: [
      { name: 'collectionId', internalType: 'uint256', type: 'uint256' }
    ]
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: '_params',
        internalType: 'struct AltBase.OrganisationParams',
        type: 'tuple',
        components: [
          { name: 'organisationId', internalType: 'uint256', type: 'uint256' },
          {
            name: 'info',
            internalType: 'struct AltBase.Info',
            type: 'tuple',
            components: [
              { name: 'name', internalType: 'string', type: 'string' },
              {
                name: 'fieldNames',
                internalType: 'string[]',
                type: 'string[]'
              },
              {
                name: 'dataTypes',
                internalType: 'uint256[]',
                type: 'uint256[]'
              },
              { name: 'values', internalType: 'string[]', type: 'string[]' }
            ]
          },
          {
            name: 'status',
            internalType: 'struct AltBase.Status',
            type: 'tuple',
            components: [
              { name: 'update', internalType: 'bool', type: 'bool' },
              { name: 'retired', internalType: 'bool', type: 'bool' }
            ]
          }
        ]
      }
    ],
    name: 'createOrUpdateOrganisation',
    outputs: [
      { name: 'organisationId', internalType: 'uint256', type: 'uint256' }
    ]
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: '_organisationParams',
        internalType: 'struct AltBase.OrganisationParams',
        type: 'tuple',
        components: [
          { name: 'organisationId', internalType: 'uint256', type: 'uint256' },
          {
            name: 'info',
            internalType: 'struct AltBase.Info',
            type: 'tuple',
            components: [
              { name: 'name', internalType: 'string', type: 'string' },
              {
                name: 'fieldNames',
                internalType: 'string[]',
                type: 'string[]'
              },
              {
                name: 'dataTypes',
                internalType: 'uint256[]',
                type: 'uint256[]'
              },
              { name: 'values', internalType: 'string[]', type: 'string[]' }
            ]
          },
          {
            name: 'status',
            internalType: 'struct AltBase.Status',
            type: 'tuple',
            components: [
              { name: 'update', internalType: 'bool', type: 'bool' },
              { name: 'retired', internalType: 'bool', type: 'bool' }
            ]
          }
        ]
      },
      {
        name: '_collectionParams',
        internalType: 'struct AltBase.CollectionParams',
        type: 'tuple',
        components: [
          { name: 'collectionId', internalType: 'uint256', type: 'uint256' },
          {
            name: 'info',
            internalType: 'struct AltBase.Info',
            type: 'tuple',
            components: [
              { name: 'name', internalType: 'string', type: 'string' },
              {
                name: 'fieldNames',
                internalType: 'string[]',
                type: 'string[]'
              },
              {
                name: 'dataTypes',
                internalType: 'uint256[]',
                type: 'uint256[]'
              },
              { name: 'values', internalType: 'string[]', type: 'string[]' }
            ]
          },
          { name: 'fieldNames', internalType: 'string[]', type: 'string[]' },
          {
            name: 'fieldOptions',
            internalType: 'string[][]',
            type: 'string[][]'
          },
          {
            name: 'fieldDataTypes',
            internalType: 'uint256[]',
            type: 'uint256[]'
          },
          { name: 'requiredFields', internalType: 'bool[]', type: 'bool[]' },
          {
            name: 'uniqueDocumentPerAddress',
            internalType: 'bool',
            type: 'bool'
          },
          { name: 'editableDocuments', internalType: 'bool', type: 'bool' },
          { name: 'restrictedPublishing', internalType: 'bool', type: 'bool' },
          {
            name: 'status',
            internalType: 'struct AltBase.Status',
            type: 'tuple',
            components: [
              { name: 'update', internalType: 'bool', type: 'bool' },
              { name: 'retired', internalType: 'bool', type: 'bool' }
            ]
          }
        ]
      },
      {
        name: '_collectionPublishers',
        internalType: 'address[]',
        type: 'address[]'
      },
      {
        name: '_permissionLevels',
        internalType: 'uint256[]',
        type: 'uint256[]'
      }
    ],
    name: 'createOrUpdateOrganisationAndCollectionAndAddRoles',
    outputs: []
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      {
        name: '_organisationNameHash',
        internalType: 'bytes32',
        type: 'bytes32'
      }
    ],
    name: 'doesOrganisationExist',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }]
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'feeCollectorAddress',
    outputs: [{ name: '', internalType: 'address payable', type: 'address' }]
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFees',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' }
    ]
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      {
        name: '_organisationNameHash',
        internalType: 'bytes32',
        type: 'bytes32'
      }
    ],
    name: 'getOrganisationID',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }]
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_id', internalType: 'uint256', type: 'uint256' },
      { name: '_user', internalType: 'address', type: 'address' }
    ],
    name: 'getPermissionLevel',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }]
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }]
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: '_params',
        internalType: 'struct AltBase.DocumentParams',
        type: 'tuple',
        components: [
          { name: 'documentId', internalType: 'uint256', type: 'uint256' },
          { name: 'organisationId', internalType: 'uint256', type: 'uint256' },
          { name: 'collectionId', internalType: 'uint256', type: 'uint256' },
          { name: 'fieldNames', internalType: 'string[]', type: 'string[]' },
          {
            name: 'fieldDataTypes',
            internalType: 'uint256[]',
            type: 'uint256[]'
          },
          { name: 'fieldValues', internalType: 'string[]', type: 'string[]' },
          {
            name: 'status',
            internalType: 'struct AltBase.Status',
            type: 'tuple',
            components: [
              { name: 'update', internalType: 'bool', type: 'bool' },
              { name: 'retired', internalType: 'bool', type: 'bool' }
            ]
          }
        ]
      }
    ],
    name: 'publishOrUpdateDocument',
    outputs: [{ name: 'documentId', internalType: 'uint256', type: 'uint256' }]
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: []
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_id', internalType: 'uint256', type: 'uint256' },
      { name: '_users', internalType: 'address[]', type: 'address[]' },
      { name: '_level', internalType: 'uint256[]', type: 'uint256[]' }
    ],
    name: 'setMultiplePermissions',
    outputs: []
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_id', internalType: 'uint256', type: 'uint256' },
      { name: '_user', internalType: 'address', type: 'address' },
      { name: '_level', internalType: 'uint256', type: 'uint256' }
    ],
    name: 'setPermissionLevel',
    outputs: []
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: []
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_newFeeAmount', internalType: 'uint256', type: 'uint256' },
      { name: '_fee', internalType: 'enum Fees.Fee', type: 'uint8' }
    ],
    name: 'updateFee',
    outputs: []
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_newFeeAmount', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '_fee', internalType: 'enum Fees.Fee[]', type: 'uint8[]' }
    ],
    name: 'updateMultipleFees',
    outputs: []
  }
] as const

/**
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export const altBaseAddress = {
  137: '0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307'
} as const

/**
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export const altBaseConfig = {
  address: altBaseAddress,
  abi: altBaseABI
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link altBaseABI}__.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof altBaseABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractRead({
    abi: altBaseABI,
    address: altBaseAddress[137],
    ...config
  } as UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"doesOrganisationExist"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseDoesOrganisationExist<
  TFunctionName extends 'doesOrganisationExist',
  TSelectData = ReadContractResult<typeof altBaseABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractRead({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'doesOrganisationExist',
    ...config
  } as UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"feeCollectorAddress"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseFeeCollectorAddress<
  TFunctionName extends 'feeCollectorAddress',
  TSelectData = ReadContractResult<typeof altBaseABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractRead({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'feeCollectorAddress',
    ...config
  } as UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"getFees"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseGetFees<
  TFunctionName extends 'getFees',
  TSelectData = ReadContractResult<typeof altBaseABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractRead({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'getFees',
    ...config
  } as UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"getOrganisationID"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseGetOrganisationId<
  TFunctionName extends 'getOrganisationID',
  TSelectData = ReadContractResult<typeof altBaseABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractRead({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'getOrganisationID',
    ...config
  } as UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"getPermissionLevel"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseGetPermissionLevel<
  TFunctionName extends 'getPermissionLevel',
  TSelectData = ReadContractResult<typeof altBaseABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractRead({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'getPermissionLevel',
    ...config
  } as UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof altBaseABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractRead({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'owner',
    ...config
  } as UseContractReadConfig<typeof altBaseABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof altBaseABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof altBaseABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, TFunctionName, TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"changeFeeCollectorAddress"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseChangeFeeCollectorAddress<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'changeFeeCollectorAddress'
        >['request']['abi'],
        'changeFeeCollectorAddress',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'changeFeeCollectorAddress'
      }
    : UseContractWriteConfig<
        typeof altBaseABI,
        'changeFeeCollectorAddress',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'changeFeeCollectorAddress'
      } = {} as any
) {
  return useContractWrite<
    typeof altBaseABI,
    'changeFeeCollectorAddress',
    TMode
  >({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'changeFeeCollectorAddress',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"createOrUpdateCollection"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseCreateOrUpdateCollection<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'createOrUpdateCollection'
        >['request']['abi'],
        'createOrUpdateCollection',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'createOrUpdateCollection'
      }
    : UseContractWriteConfig<
        typeof altBaseABI,
        'createOrUpdateCollection',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createOrUpdateCollection'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'createOrUpdateCollection', TMode>(
    {
      abi: altBaseABI,
      address: altBaseAddress[137],
      functionName: 'createOrUpdateCollection',
      ...config
    } as any
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"createOrUpdateOrganisation"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseCreateOrUpdateOrganisation<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'createOrUpdateOrganisation'
        >['request']['abi'],
        'createOrUpdateOrganisation',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'createOrUpdateOrganisation'
      }
    : UseContractWriteConfig<
        typeof altBaseABI,
        'createOrUpdateOrganisation',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createOrUpdateOrganisation'
      } = {} as any
) {
  return useContractWrite<
    typeof altBaseABI,
    'createOrUpdateOrganisation',
    TMode
  >({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'createOrUpdateOrganisation',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"createOrUpdateOrganisationAndCollectionAndAddRoles"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseCreateOrUpdateOrganisationAndCollectionAndAddRoles<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'createOrUpdateOrganisationAndCollectionAndAddRoles'
        >['request']['abi'],
        'createOrUpdateOrganisationAndCollectionAndAddRoles',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'createOrUpdateOrganisationAndCollectionAndAddRoles'
      }
    : UseContractWriteConfig<
        typeof altBaseABI,
        'createOrUpdateOrganisationAndCollectionAndAddRoles',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createOrUpdateOrganisationAndCollectionAndAddRoles'
      } = {} as any
) {
  return useContractWrite<
    typeof altBaseABI,
    'createOrUpdateOrganisationAndCollectionAndAddRoles',
    TMode
  >({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'createOrUpdateOrganisationAndCollectionAndAddRoles',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"publishOrUpdateDocument"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBasePublishOrUpdateDocument<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'publishOrUpdateDocument'
        >['request']['abi'],
        'publishOrUpdateDocument',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'publishOrUpdateDocument'
      }
    : UseContractWriteConfig<
        typeof altBaseABI,
        'publishOrUpdateDocument',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'publishOrUpdateDocument'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'publishOrUpdateDocument', TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'publishOrUpdateDocument',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<typeof altBaseABI, 'renounceOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'renounceOwnership', TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'renounceOwnership',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"setMultiplePermissions"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseSetMultiplePermissions<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'setMultiplePermissions'
        >['request']['abi'],
        'setMultiplePermissions',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setMultiplePermissions'
      }
    : UseContractWriteConfig<
        typeof altBaseABI,
        'setMultiplePermissions',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMultiplePermissions'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'setMultiplePermissions', TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'setMultiplePermissions',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"setPermissionLevel"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseSetPermissionLevel<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'setPermissionLevel'
        >['request']['abi'],
        'setPermissionLevel',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setPermissionLevel'
      }
    : UseContractWriteConfig<typeof altBaseABI, 'setPermissionLevel', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setPermissionLevel'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'setPermissionLevel', TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'setPermissionLevel',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<typeof altBaseABI, 'transferOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'transferOwnership', TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'transferOwnership',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"updateFee"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseUpdateFee<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'updateFee'
        >['request']['abi'],
        'updateFee',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'updateFee' }
    : UseContractWriteConfig<typeof altBaseABI, 'updateFee', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'updateFee'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'updateFee', TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'updateFee',
    ...config
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"updateMultipleFees"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseUpdateMultipleFees<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof altBaseAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof altBaseABI,
          'updateMultipleFees'
        >['request']['abi'],
        'updateMultipleFees',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'updateMultipleFees'
      }
    : UseContractWriteConfig<typeof altBaseABI, 'updateMultipleFees', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'updateMultipleFees'
      } = {} as any
) {
  return useContractWrite<typeof altBaseABI, 'updateMultipleFees', TMode>({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'updateMultipleFees',
    ...config
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"changeFeeCollectorAddress"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseChangeFeeCollectorAddress(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof altBaseABI,
      'changeFeeCollectorAddress'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'changeFeeCollectorAddress',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'changeFeeCollectorAddress'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"createOrUpdateCollection"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseCreateOrUpdateCollection(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof altBaseABI,
      'createOrUpdateCollection'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'createOrUpdateCollection',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'createOrUpdateCollection'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"createOrUpdateOrganisation"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseCreateOrUpdateOrganisation(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof altBaseABI,
      'createOrUpdateOrganisation'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'createOrUpdateOrganisation',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'createOrUpdateOrganisation'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"createOrUpdateOrganisationAndCollectionAndAddRoles"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseCreateOrUpdateOrganisationAndCollectionAndAddRoles(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof altBaseABI,
      'createOrUpdateOrganisationAndCollectionAndAddRoles'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'createOrUpdateOrganisationAndCollectionAndAddRoles',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'createOrUpdateOrganisationAndCollectionAndAddRoles'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"publishOrUpdateDocument"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBasePublishOrUpdateDocument(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, 'publishOrUpdateDocument'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'publishOrUpdateDocument',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'publishOrUpdateDocument'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'renounceOwnership',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"setMultiplePermissions"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseSetMultiplePermissions(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, 'setMultiplePermissions'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'setMultiplePermissions',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'setMultiplePermissions'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"setPermissionLevel"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseSetPermissionLevel(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, 'setPermissionLevel'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'setPermissionLevel',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'setPermissionLevel'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'transferOwnership',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"updateFee"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseUpdateFee(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, 'updateFee'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'updateFee',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'updateFee'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link altBaseABI}__ and `functionName` set to `"updateMultipleFees"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function usePrepareAltBaseUpdateMultipleFees(
  config: Omit<
    UsePrepareContractWriteConfig<typeof altBaseABI, 'updateMultipleFees'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: altBaseABI,
    address: altBaseAddress[137],
    functionName: 'updateMultipleFees',
    ...config
  } as UsePrepareContractWriteConfig<typeof altBaseABI, 'updateMultipleFees'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    ...config
  } as UseContractEventConfig<typeof altBaseABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"Collection"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseCollectionEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'Collection'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'Collection',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'Collection'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"CollectionInfo"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseCollectionInfoEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'CollectionInfo'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'CollectionInfo',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'CollectionInfo'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"Document"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseDocumentEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'Document'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'Document',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'Document'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"FeeCollectorAddressUpdated"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseFeeCollectorAddressUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'FeeCollectorAddressUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'FeeCollectorAddressUpdated',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'FeeCollectorAddressUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"Fields"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseFieldsEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'Fields'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'Fields',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'Fields'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"Organisation"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseOrganisationEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'Organisation'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'Organisation',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'Organisation'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'OwnershipTransferred',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"feeChanged"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBaseFeeChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'feeChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'feeChanged',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'feeChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link altBaseABI}__ and `eventName` set to `"permissionChanged"`.
 *
 * [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xb4db1C5FcAA039DfB29Ee0A6d4744Cba9D70F307)
 */
export function useAltBasePermissionChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof altBaseABI, 'permissionChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof altBaseAddress } = {} as any
) {
  return useContractEvent({
    abi: altBaseABI,
    address: altBaseAddress[137],
    eventName: 'permissionChanged',
    ...config
  } as UseContractEventConfig<typeof altBaseABI, 'permissionChanged'>)
}
